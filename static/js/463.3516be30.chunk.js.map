{"version":3,"file":"static/js/463.3516be30.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/Components/Dialogs/Dialogs.module.css?69ad","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx","hoc/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__8S2DE\",\"dialogItem\":\"Dialogs_dialogItem__0VXco\",\"dialog\":\"Dialogs_dialog__bc1i+\",\"active\":\"Dialogs_active__ZqTGM\",\"messages\":\"Dialogs_messages__N80sc\",\"message\":\"Dialogs_message__-YNT-\"};","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}\r\n                     activeClassName={s.active}\r\n            >{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\n\r\nexport type MessagePropsType = {\r\n    id: string\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return <div className=\"s.dialog\">{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport s2 from '../common/FormsControls/FormControl.module.css'\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const dialogItem = props.dialogs.map(d =>\r\n        <DialogItem key={d.id} name={d.name} id={d.id}/>\r\n    )\r\n\r\n    const messages = props.messages.map(m =>\r\n        <Message key={m.id} message={m.message} id={m.id}/>\r\n    )\r\n\r\n    const addNewMessage = (formData: FormDataType) => {\r\n        props.sendMessage(formData.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItem}>\r\n                {dialogItem}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messages}\r\n                <AddMessageForm addNewMessage={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst AddMessageForm: React.FC<{ addNewMessage: (formData: FormDataType) => void }> = ({addNewMessage}) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newMessage: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            newMessage: Yup.string().max(50, 'Must be 50 characters or less')\r\n        }),\r\n        onSubmit: values => {\r\n            addNewMessage({newMessageBody: values.newMessage})\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <textarea\r\n                    id='newMessage'\r\n                    placeholder='Enter your message'\r\n                    {...formik.getFieldProps('newMessage')}\r\n                />\r\n                {formik.errors.newMessage && formik.touched.newMessage &&\r\n                    <div className={s2.commonErrorMessage}>{formik.errors.newMessage}</div>}\r\n            </div>\r\n            <div>\r\n                <button type='submit'>\r\n                    <img width={\"17px\"}\r\n                         src={\"https://toppng.com/uploads/preview/paper-airplane-symbol-11549404798w6cibysc3j.png\"}\r\n                         alt={\"\"}/>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {ComponentType} from \"react\";\r\nimport {addMessageAC, dialogsType, messagesType} from \"../../Redux/Reducers/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    dialogs: dialogsType\r\n    messages: messagesType\r\n}\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (text: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (text: string) => {\r\n            dispatch(addMessageAC(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import React, {ComponentType} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../Redux/redux-store\";\r\n\r\ntype mstpType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mstp = (state: AppRootStateType): mstpType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: mstpType) => {\r\n\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    };\r\n\r\n    return connect(mstp)(RedirectComponent)\r\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["props","path","id","className","s","to","activeClassName","name","message","AddMessageForm","addNewMessage","formik","useFormik","initialValues","newMessage","validationSchema","Yup","max","onSubmit","values","newMessageBody","resetForm","handleSubmit","placeholder","getFieldProps","errors","touched","s2","type","width","src","alt","dialogItem","dialogs","map","d","messages","m","formData","sendMessage","compose","connect","state","messagesPage","dispatch","text","addMessageAC","withAuthRedirect","Dialogs","mstp","isAuth","auth","Component","restProps","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}