{"version":3,"file":"static/js/60.16e2e2ed.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/Components/common/Pagination/Pagination.module.css?0007","Components/common/Pagination/Pagination.tsx","webpack://samurai-way/./src/Components/Users/users.module.css?5f45","Components/Users/User.tsx","Components/Users/Users.tsx","Redux/selectors/user-selectors.ts","Components/Users/UsersContainer.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"Pagination_page__tqsA+\",\"selectedPage\":\"Pagination_selectedPage__gaVeS\",\"pagination\":\"Pagination_pagination__2vogL\"};","import React, {useState} from 'react';\r\nimport s from \"./Pagination.module.css\";\r\n\r\ntype PaginationPropsType = {\r\n  totalItemsCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  onPageChanged: (currentPage: number) => void\r\n  portionSize: number\r\n}\r\n\r\nexport const Pagination: React.FC<PaginationPropsType> = (\r\n  {\r\n    totalItemsCount,\r\n    pageSize,\r\n    onPageChanged,\r\n    currentPage,\r\n    portionSize\r\n  }\r\n) => {\r\n\r\n  const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={s.pagination}>\r\n      {portionNumber > 1 &&\r\n          <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n          }}>prev</button>}\r\n\r\n      {pages\r\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n        .map(el => {\r\n        return <span key={el}\r\n                     className={el === currentPage ? s.selectedPage : s.page}\r\n                     onClick={() => onPageChanged(el)}>\r\n                            {el}</span>\r\n      })}\r\n\r\n      {portionCount > portionNumber &&\r\n          <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n          }}>next</button>}\r\n    </div>\r\n  );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__uDe2x\"};","import React from 'react';\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {UsersType} from \"../../Redux/Reducers/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    unfollow: (userId: string) => void\r\n    follow: (userId: string) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = (\r\n    {\r\n        user,\r\n        followingInProgress,\r\n        unfollow,\r\n        follow\r\n    }) => {\r\n\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img className={s.userPhoto} src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                             alt=\"\"/>\r\n                            </NavLink>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {user.followed\r\n\r\n                            ? <button disabled={followingInProgress.some(f => f === user.id)}\r\n                                      onClick={() => unfollow(user.id)\r\n                                      }>Unfollow</button>\r\n\r\n                            : <button disabled={followingInProgress.some(f => f === user.id)}\r\n                                      onClick={() => follow(user.id)\r\n                                      }>Follow</button>\r\n                        }\r\n                    </div>\r\n\r\n                </span>\r\n\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n            </span>\r\n        </div>)\r\n};","import React from 'react';\r\nimport {UsersType} from \"../../Redux/Reducers/users-reducer\";\r\nimport {Pagination} from \"../common/Pagination/Pagination\";\r\nimport {User} from \"./User\";\r\n\r\ntype UsersPropsType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  onPageChanged: (currentPage: number) => void\r\n  users: Array<UsersType>\r\n  unfollow: (userId: string) => void\r\n  follow: (userId: string) => void\r\n  toggleIsFollowing: (isFetching: boolean, userID: string) => void\r\n  followingInProgress: string[]\r\n}\r\n\r\nexport const Users: React.FC<UsersPropsType> = (\r\n  {\r\n    totalUsersCount,\r\n    pageSize,\r\n    currentPage,\r\n    onPageChanged,\r\n    followingInProgress,\r\n    follow,\r\n    unfollow, ...props\r\n  }) => {\r\n\r\n  return (\r\n    <div>\r\n      {<Pagination totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n                   currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   portionSize={10}/>}\r\n      {props.users.map(u =>\r\n        <User key={u.id}\r\n              user={u}\r\n              followingInProgress={followingInProgress}\r\n              follow={follow}\r\n              unfollow={unfollow}/>\r\n      )}\r\n    </div>\r\n  );\r\n};","import {AppRootStateType} from \"../redux-store\";\r\nimport {UsersType} from \"../Reducers/users-reducer\";\r\n\r\nexport const getUsers = (state: AppRootStateType): Array<UsersType> => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppRootStateType): number => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType): number => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppRootStateType): number => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppRootStateType): boolean => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType): string[] => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/redux-store\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    UsersType, toggleIsFollowing, requestUsers\r\n} from \"../../Redux/Reducers/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/selectors/user-selectors\";\r\n\r\nclass UsersAPIComponent extends React.Component<MapDispatchPropsType & MapStatePropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleIsFollowing={this.props.toggleIsFollowing}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nexport type MapStatePropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\nexport type MapDispatchPropsType = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleIsFollowing: (isFetching: boolean, userID: string) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleIsFollowing,\r\n    getUsers: requestUsers\r\n})(UsersAPIComponent);","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["Pagination","totalItemsCount","pageSize","onPageChanged","currentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","onClick","filter","p","map","el","User","user","followingInProgress","unfollow","follow","to","id","src","photos","small","userPhoto","alt","followed","disabled","some","f","name","status","Users","totalUsersCount","props","users","u","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersAPIComponent","pageNumber","setCurrentPage","this","Preloader","toggleIsFollowing","React","connect","requestUsers","_objectWithoutProperties","source","excluded","key","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}