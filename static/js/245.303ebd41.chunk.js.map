{"version":3,"file":"static/js/245.303ebd41.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/Components/Users/users.module.css?5f45","Components/Users/User.tsx","Redux/selectors/user-selectors.ts","Components/Users/UsersSearchForm.tsx","hooks/useDebounce.ts","Components/Users/Users.tsx","Components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"users_container__oPK1m\",\"userPhoto\":\"users_userPhoto__uDe2x\",\"searchForm\":\"users_searchForm__aRXpS\"};","import React from 'react';\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"antd\";\r\nimport {UsersType} from \"api/users-api\";\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    unfollow: (userId: string) => void\r\n    follow: (userId: string) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = (\r\n    {\r\n        user,\r\n        followingInProgress,\r\n        unfollow,\r\n        follow\r\n    }) => {\r\n\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img className={s.userPhoto} src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                             alt=\"\"/>\r\n                            </NavLink>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {user.followed\r\n\r\n                            ? <Button disabled={followingInProgress.some(f => +f === user.id)}\r\n                                      onClick={() => unfollow(user.id.toString())\r\n                                      }>Unfollow</Button>\r\n\r\n                            : <Button disabled={followingInProgress.some(f => +f === user.id)}\r\n                                      onClick={() => follow(user.id.toString())\r\n                                      }>Follow</Button>\r\n                        }\r\n                    </div>\r\n\r\n                </span>\r\n\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n            </span>\r\n        </div>)\r\n};","import {AppRootStateType} from \"../store\";\r\nimport {UsersType} from \"api/users-api\";\r\nimport {FilterType} from \"../Reducers/users-reducer\";\r\n\r\nexport const getUsers = (state: AppRootStateType): Array<UsersType> => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppRootStateType): number => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType): number => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppRootStateType): number => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppRootStateType): boolean => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType): string[] => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppRootStateType): FilterType => {\r\n    return state.usersPage.filter\r\n}","import {FilterType} from \"Redux/Reducers/users-reducer\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './users.module.css'\r\nimport {useDebounce} from \"hooks/useDebounce\";\r\nimport {useAppSelector} from \"Redux/store\";\r\nimport {getUsersFilter} from \"Redux/selectors/user-selectors\";\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = ({onFilterChanged}) => {\r\n\r\n    const filter = useAppSelector(getUsersFilter)\r\n\r\n    const [term, setTerm] = useState('')\r\n    const [friend, setFriend] = useState<null | boolean>(null)\r\n\r\n    useEffect(()=>{\r\n        setTerm(filter.term)\r\n        setFriend(filter.friend)\r\n    }, [filter])\r\n\r\n    const debouncedFilterChange = useDebounce(term, 800)\r\n\r\n    const onChangeTermHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTerm(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        onFilterChanged({term, friend})\r\n    }, [debouncedFilterChange])\r\n\r\n    const onChangeSelectHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        const result = e.target.value === \"null\" ? null : e.currentTarget.value === \"true\"\r\n        setFriend(result)\r\n        onFilterChanged({term, friend: result})\r\n    }\r\n\r\n    return (\r\n        <div className={s.searchForm}>\r\n            Find:\r\n            <input value={term} onChange={onChangeTermHandler}/>\r\n            <select value={String(friend)} onChange={onChangeSelectHandler}>\r\n                <option value=\"null\">All</option>\r\n                <option value=\"true\">Only followed</option>\r\n                <option value=\"false\">Only unfollowed</option>\r\n            </select>\r\n        </div>\r\n\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\n\r\nexport function useDebounce<T>(value: T, delay?: number): T {\r\n    const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => setDebouncedValue(value), delay || 500)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [value, delay])\r\n\r\n    return debouncedValue\r\n}","import React, {useEffect} from 'react';\r\nimport {User} from \"./User\";\r\nimport s from './users.module.css'\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {FilterType, followUser, requestUsers, unfollowUser} from \"Redux/Reducers/users-reducer\";\r\nimport {useAppDispatch, useAppSelector} from \"Redux/store\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"Redux/selectors/user-selectors\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as querystring from \"querystring\";\r\nimport {Pagination, PaginationProps} from 'antd';\r\n\r\n\r\nexport const Users: React.FC = () => {\r\n\r\n    const users = useAppSelector(getUsers)\r\n    const pageSize = useAppSelector(getPageSize)\r\n    const currentPage = useAppSelector(getCurrentPage)\r\n    const totalUsersCount = useAppSelector(getTotalUsersCount)\r\n    const followingInProgress = useAppSelector(getFollowingInProgress)\r\n    const filter = useAppSelector(getUsersFilter)\r\n\r\n    const dispatch = useAppDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const {\r\n            page,\r\n            friend,\r\n            term\r\n        } = querystring.parse(history.location.search.substr(1)) as { term: string, friend: string, page: string }\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!page) actualPage = +page\r\n        if (!!term) actualFilter = {...actualFilter, term: term}\r\n        if (!!friend) actualFilter = {\r\n            ...actualFilter,\r\n            friend: friend === 'null' ? null : friend === 'true'\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    let finalUrlSearch = ``\r\n    if (filter.term === \"\") finalUrlSearch = `?friend=${filter.friend}&page=${currentPage}`\r\n    if (filter.friend === null) finalUrlSearch = `?term=${filter.term}&page=${currentPage}`\r\n    if (currentPage === 1) finalUrlSearch = `?term=${filter.term}&friend=${filter.friend}`\r\n\r\n    if (filter.term === \"\" && filter.friend === null) finalUrlSearch = `?page=${currentPage}`\r\n    if (filter.term === \"\" && currentPage === 1) finalUrlSearch = `?friend=${filter.friend}`\r\n    if (filter.friend === null && currentPage === 1) finalUrlSearch = `?term=${filter.term}`\r\n    if (filter.term === \"\" && filter.friend === null && currentPage === 1) finalUrlSearch = ``\r\n\r\n    useEffect(() => {\r\n        history.push({\r\n            pathname: '/users',\r\n            search: finalUrlSearch\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const follow = (userId: string) => {\r\n        dispatch(followUser(userId))\r\n    }\r\n    const unfollow = (userId: string) => {\r\n        dispatch(unfollowUser(userId))\r\n    }\r\n\r\n    const onShowSizeChange: PaginationProps['onShowSizeChange'] = (current, pageSize) => {\r\n        dispatch(requestUsers(current, pageSize, filter))\r\n    };\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n            <Pagination showSizeChanger\r\n                        onChange={onPageChanged}\r\n                        onShowSizeChange={onShowSizeChange}\r\n                        pageSizeOptions={[5, 10, 15, 25, 50, 100]}\r\n                        defaultPageSize={pageSize}\r\n                        defaultCurrent={1}\r\n                        current={currentPage}\r\n                        total={totalUsersCount}\r\n            />\r\n            {users.map(u =>\r\n                <User key={u.id}\r\n                      user={u}\r\n                      followingInProgress={followingInProgress}\r\n                      follow={follow}\r\n                      unfollow={unfollow}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport {useAppSelector} from \"Redux/store\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"Redux/selectors/user-selectors\";\r\n\r\nconst UsersPage: React.FC = () => {\r\n\r\n    const isFetching = useAppSelector(getIsFetching)\r\n\r\n    return <>\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users />\r\n    </>\r\n}\r\n\r\nexport default UsersPage"],"names":["User","_ref","user","followingInProgress","unfollow","follow","_jsxs","children","_jsx","NavLink","to","id","className","s","src","photos","small","userPhoto","alt","followed","Button","disabled","some","f","onClick","toString","name","status","getUsers","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","getUsersFilter","filter","UsersSearchForm","onFilterChanged","useAppSelector","_useState","useState","_useState2","_slicedToArray","term","setTerm","_useState3","_useState4","friend","setFriend","useEffect","debouncedFilterChange","value","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","onChange","e","currentTarget","String","result","target","Users","dispatch","useAppDispatch","history","useHistory","querystring","parse","location","search","substr","page","actualPage","actualFilter","_objectSpread","requestUsers","finalUrlSearch","concat","push","pathname","userId","followUser","unfollowUser","Pagination","showSizeChanger","pageNumber","onShowSizeChange","current","pageSizeOptions","defaultPageSize","defaultCurrent","total","map","u","_Fragment","Preloader"],"sourceRoot":""}